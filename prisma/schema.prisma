// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  githubId      String    @unique
  username      String    @unique
  displayName   String?
  avatarUrl     String?
  email         String?   @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relationships
  hourlyStats   UserHourlyStats?
  dailyStats    UserDailyStats?
  weeklyStats   UserWeeklyStats?
  monthlyStats  UserMonthlyStats?
  yearlyStats   UserYearlyStats?
  allTimeStats  UserAllTimeStats?
  preferences   UserPreferences?
  sessions      Session[]
  accounts      Account[]
  apiTokens     ApiToken[]
  folderProjects FolderProject[]
  userEvents    UserEvents[]
  
  @@map("users")
}

model MessageStats {
  id                    String    @id @default(cuid())
  type                  String    // "AI" or "User"
  timestamp             String
  conversationFile      String
  
  // AI variant fields (nullable for User messages)
  inputTokens           Int?
  outputTokens          Int?
  cacheCreationTokens   Int?
  cacheReadTokens       Int?
  cost                  Float?
  model                 String?
  toolCalls             Int?
  hash                  String?
  
  // FileOperationStats fields (nullable for User messages)
  filesRead             Int?
  filesEdited           Int?
  filesWritten          Int?
  fileTypes             Json?     // BTreeMap<String, u32> as JSON
  terminalCommands      Int?
  globSearches          Int?
  grepSearches          Int?
  linesRead             BigInt?
  linesEdited           BigInt?
  linesWritten          BigInt?
  bytesRead             BigInt?
  bytesEdited           BigInt?
  bytesWritten          BigInt?
  
  // TodoStats fields (present for both AI and User messages)
  todosCreated          Int       @default(0)
  todosCompleted        Int       @default(0)
  todosInProgress       Int       @default(0)
  todoWrites            Int       @default(0)
  todoReads             Int       @default(0)
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("message_stats")
}

model UserHourlyStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  periodStart           DateTime
  periodEnd             DateTime
  
  // Aggregated metrics
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_hourly_stats")
}

model UserDailyStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  periodStart           DateTime
  periodEnd             DateTime
  
  // Aggregated metrics
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_daily_stats")
}

model UserPreferences {
  id                    String   @id @default(cuid())
  userId                String   @unique
  
  // Display preferences
  displayNamePreference String   @default("displayName") // "displayName" | "username"
  
  // Localization
  locale                String   @default("en")
  timezone              String   @default("UTC")
  currency              String   @default("USD")
  
  // Privacy settings
  optOutPublic          Boolean  @default(false)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_preferences")
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  
  @@unique([identifier, token])
  @@map("verification_tokens")
}

// API tokens for CLI access
model ApiToken {
  id          String   @id @default(cuid())
  userId      String
  token       String   @unique
  name        String   @default("CLI Token")
  lastUsed    DateTime?
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  
  // Relationships
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("api_tokens")
}

// Projects table
model Project {
  id            String   @id @default(cuid())
  name          String   @unique
  description   String?
  openSource    Boolean  @default(false)
  githubLink    String?
  websiteLink   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relationships
  folderProjects FolderProject[]
  
  @@map("projects")
}

// Association table for folders and projects
model FolderProject {
  id        String   @id @default(cuid())
  userId    String
  folder    String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@unique([userId, folder])
  @@map("folder_projects")
}

// Raw events table for 30-day retention
model UserEvents {
  id                    String    @id @default(cuid())
  userId                String
  eventDate             DateTime  @db.Date
  type                  String    // "AI" or "User"
  timestamp             String
  conversationFile      String
  
  // Aggregated metrics per message
  toolsUsed             Int       @default(0)
  messagesCount         Int       @default(1)
  inputTokens           Int       @default(0)
  outputTokens          Int       @default(0)
  cacheCreationTokens   Int       @default(0)
  cacheReadTokens       Int       @default(0)
  cost                  Float     @default(0)
  
  // File operations
  filesRead             Int       @default(0)
  filesEdited           Int       @default(0)
  filesWritten          Int       @default(0)
  linesRead             BigInt    @default(0)
  linesEdited           BigInt    @default(0)
  linesWritten          BigInt    @default(0)
  bytesRead             BigInt    @default(0)
  bytesEdited           BigInt    @default(0)
  bytesWritten          BigInt    @default(0)
  terminalCommands      Int       @default(0)
  globSearches          Int       @default(0)
  grepSearches          Int       @default(0)
  
  // Todo stats
  todosCreated          Int       @default(0)
  todosCompleted        Int       @default(0)
  todosInProgress       Int       @default(0)
  todoWrites            Int       @default(0)
  todoReads             Int       @default(0)
  
  createdAt             DateTime  @default(now())
  
  // Relationships
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([eventDate])
  @@index([userId, eventDate])
  @@index([createdAt])
  @@map("user_events")
}

// Monthly aggregation table
model UserMonthlyStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  periodStart           DateTime
  periodEnd             DateTime
  
  // Aggregated metrics
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_monthly_stats")
}

// Weekly aggregation table
model UserWeeklyStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  periodStart           DateTime
  periodEnd             DateTime
  
  // Aggregated metrics
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_weekly_stats")
}

// Yearly aggregation table
model UserYearlyStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  periodStart           DateTime
  periodEnd             DateTime
  
  // Aggregated metrics
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_yearly_stats")
}

// All-time aggregation table (never resets, always accumulates)
model UserAllTimeStats {
  id                    String   @id @default(cuid())
  userId                String   @unique
  
  // Aggregated metrics (lifetime totals)
  totalToolsCalled      Int      @default(0)
  totalMessagesSent     Int      @default(0)
  totalInputTokens      BigInt   @default(0)
  totalOutputTokens     BigInt   @default(0)
  totalCacheCreationTokens BigInt @default(0)
  totalCacheReadTokens  BigInt   @default(0)
  totalCost             Float    @default(0)
  
  // File operations
  totalFilesRead        Int      @default(0)
  totalFilesEdited      Int      @default(0)
  totalFilesWritten     Int      @default(0)
  totalLinesRead        BigInt   @default(0)
  totalLinesEdited      BigInt   @default(0)
  totalLinesWritten     BigInt   @default(0)
  totalBytesRead        BigInt   @default(0)
  totalBytesEdited      BigInt   @default(0)
  totalBytesWritten     BigInt   @default(0)
  totalTerminalCommands Int      @default(0)
  totalGlobSearches     Int      @default(0)
  totalGrepSearches     Int      @default(0)
  
  // Todo stats
  totalTodosCreated     Int      @default(0)
  totalTodosCompleted   Int      @default(0)
  totalTodosInProgress  Int      @default(0)
  totalTodoWrites       Int      @default(0)
  totalTodoReads        Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_all_time_stats")
}